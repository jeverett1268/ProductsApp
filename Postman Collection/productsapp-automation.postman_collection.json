{
	"info": {
		"_postman_id": "d0558d92-acb4-4bb7-a061-320bcd82e6c1",
		"name": "productsapp-automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get All Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Test(s) For Simple Products API\r",
							"\r",
							"//get the json response from the api\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"//Testing That Field Exists/Structure Test\r",
							"pm.test(\"Response to have an ID\", function()\r",
							"        {pm.response.to.have.jsonBody(\"[0].Id\")});\r",
							"\r",
							"pm.test(\"Response to have an Name\", function()\r",
							"        {pm.response.to.have.jsonBody(\"[0].Name\")});\r",
							"\r",
							"pm.test(\"Response to have a Category\", function()\r",
							"        {pm.response.to.have.jsonBody(\"[0].Category\")});\r",
							"\r",
							"pm.test(\"Response to have a Price\", function()\r",
							"        {pm.response.to.have.jsonBody(\"[0].Price\")});\r",
							"\r",
							"//Testing ID Field\r",
							"pm.test(\"Value of [0].Id to be 1\", function(){\r",
							"    pm.expect(1).to.equal(jsonData[0].Id)\r",
							"});\r",
							"\r",
							"pm.test(\"Value of [1].Id to be 2\", function(){\r",
							"    pm.expect(2).to.equal(jsonData[1].Id)\r",
							"});\r",
							"\r",
							"pm.test(\"Value of [2].Id to be 3\", function(){\r",
							"    pm.expect(3).to.equal(jsonData[2].Id)\r",
							"});\r",
							"\r",
							"//Testing Name Field\r",
							"pm.test(\"Value of [0].Name to be Elden Ring\", function(){\r",
							"    pm.expect(\"Elden Ring\").to.equal(jsonData[0].Name)\r",
							"});\r",
							"\r",
							"pm.test(\"Value of [1].Name to be Nintendo Switch\", function(){\r",
							"    pm.expect(\"Nintendo Switch\").to.equal(jsonData[1].Name)\r",
							"});\r",
							"\r",
							"pm.test(\"Value of [2].Name to be Winter Jacket\", function(){\r",
							"    pm.expect(\"Winter Jacket\").to.equal(jsonData[2].Name)\r",
							"});\r",
							"\r",
							"\r",
							"//Testing Category Field\r",
							"pm.test(\"Value of [0].Category to be Video Games\", function(){\r",
							"    pm.expect(\"Video Games\").to.equal(jsonData[0].Category)\r",
							"});\r",
							"\r",
							"pm.test(\"Value of [1].Category to be Electronics\", function(){\r",
							"    pm.expect(\"Electronics\").to.equal(jsonData[1].Category)\r",
							"});\r",
							"\r",
							"pm.test(\"Value of [2].Category to be Clothes\", function(){\r",
							"    pm.expect(\"Clothes\").to.equal(jsonData[2].Category)\r",
							"});\r",
							"\r",
							"\r",
							"//Testing Price Field\r",
							"pm.test(\"Value of [0].Price to be 59.99\", function(){\r",
							"    pm.expect(59.99).to.equal(jsonData[0].Price)\r",
							"});\r",
							"\r",
							"pm.test(\"Value of [1].Price to be 299.99\", function(){\r",
							"    pm.expect(299.99).to.equal(jsonData[1].Price)\r",
							"});\r",
							"\r",
							"pm.test(\"Value of [2].Price to be 26.99\", function(){\r",
							"    pm.expect(26.99).to.equal(jsonData[2].Price)\r",
							"});\r",
							"\r",
							"//Test response to be a success and response time.\r",
							"pm.test(\"response to be 200 OK\", function(){\r",
							" pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"response time less than 1000MS\", function(){\r",
							" pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:16232/api/products",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "16232",
					"path": [
						"api",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Products ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Test(s) For Simple Products API\r",
							"\r",
							"//get the json response from the api\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"//Testing That Field Exists/Structure Test\r",
							"pm.test(\"Response to have an ID\", function()\r",
							"        {pm.response.to.have.jsonBody(\"Id\")});\r",
							"\r",
							"pm.test(\"Response to have an Name\", function()\r",
							"        {pm.response.to.have.jsonBody(\"Name\")});\r",
							"\r",
							"pm.test(\"Response to have a Category\", function()\r",
							"        {pm.response.to.have.jsonBody(\"Category\")});\r",
							"\r",
							"pm.test(\"Response to have a Price\", function()\r",
							"        {pm.response.to.have.jsonBody(\"Price\")});\r",
							"\r",
							"//Content Tests\r",
							"\r",
							"pm.test(\"Value of Id to be 3\", function(){\r",
							"    pm.expect(3).to.equal(jsonData.Id)\r",
							"});\r",
							"\r",
							"pm.test(\"Value of Name to be Winter Jacket\", function(){\r",
							"    pm.expect(\"Winter Jacket\").to.equal(jsonData.Name)\r",
							"});\r",
							"\r",
							"pm.test(\"Value of Category to be Clothes\", function(){\r",
							"    pm.expect(\"Clothes\").to.equal(jsonData.Category)\r",
							"});\r",
							"\r",
							"pm.test(\"Value of Price to be 26.99\", function(){\r",
							"    pm.expect(26.99).to.equal(jsonData.Price)\r",
							"});\r",
							"\r",
							"\r",
							"//Response Tests\r",
							"pm.test(\"response to be 200 OK\", function(){\r",
							" pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"response time less than 1000MS\", function(){\r",
							" pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:16232/api/products/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "16232",
					"path": [
						"api",
						"products",
						"3"
					]
				}
			},
			"response": []
		}
	]
}